#INCLUDE "course.module"

PROC id(CHAN INT in?, out!)
  WHILE TRUE
    INT n:
    SEQ
      in ? n
      out ! n
:

PROC prefix(VAL INT n, CHAN INT in?, out!)
  SEQ
    out ! n
    id(in, out)
:

PROC delta(CHAN INT in?, out.0!, out.1!)
  WHILE TRUE
    INT n:
    SEQ
      in ? n
      out.0 ! n
      out.1 ! n
:

PROC succ(CHAN INT in?, out!)
  WHILE TRUE
    INT n:
    SEQ
      in ? n
      out ! n PLUS 1
:

PROC consume(VAL INT n.loops, CHAN INT in?, CHAN BYTE out!)
  TIMER tim:
  INT t0, t1:
  INT value:
  INT count:
  SEQ
    count := 0
    VAL INT warm.up IS 16:
    SEQ i = 0 FOR warm.up
      in ? value
    WHILE (count < 100)
      SEQ
        tim ? t0
        SEQ i = 0 FOR n.loops
          in ? value
        tim ? t1
        VAL INT millisecs IS t1 MINUS t0:
        SEQ
          out.int(millisecs, 0, out)
          out.string("*n", 0, out)
          count := count PLUS 1
:

PROC comms.time(CHAN BYTE kyb?, screen!, err!)
  CHAN OF INT a, b, c, d:
  PAR
    prefix(0, b, a)
    delta(a, c, d)
    succ(c, b)
    consume(100000, d, screen)
:
